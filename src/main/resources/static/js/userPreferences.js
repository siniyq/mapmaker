/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
class UserPreferencesModule {
    constructor() {
        this.preferences = {
            liked: [],
            disliked: []
        };
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        this.init();
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    init() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        this.loadPreferences();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        document.addEventListener('userLoggedIn', () => this.loadPreferences());
        document.addEventListener('userLoggedOut', () => this.clearPreferences());
        
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
        const preferencesButton = document.getElementById('preferences');
        if (preferencesButton) {
            preferencesButton.addEventListener('click', () => this.showPreferencesModal());
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞
     */
    async loadPreferences() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if (!window.authModule || !window.authModule.isAuthenticated()) {
            return;
        }
        
        const userId = window.authModule.getCurrentUser().id;
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π "–Ω—Ä–∞–≤–∏—Ç—Å—è"
            const likedResponse = await fetch(`/api/users/${userId}/preferences/liked`);
            if (likedResponse.ok) {
                this.preferences.liked = await likedResponse.json();
            }
            
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π "–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è"
            const dislikedResponse = await fetch(`/api/users/${userId}/preferences/disliked`);
            if (dislikedResponse.ok) {
                this.preferences.disliked = await dislikedResponse.json();
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI();
            
            console.log('–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.preferences);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π:', error);
        }
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–∏ –≤—ã—Ö–æ–¥–µ)
     */
    clearPreferences() {
        this.preferences = {
            liked: [],
            disliked: []
        };
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    updateUI() {
        // –í—ã–¥–µ–ª—è–µ–º –ª—é–±–∏–º—ã–µ —Ç–∏–ø—ã POI
        const poiButtons = document.querySelectorAll('#poi-buttons button');
        poiButtons.forEach(button => {
            const poiType = button.id.replace('poi-', '');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
            button.style.border = '';
            button.style.opacity = '';
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
            if (this.preferences.liked.includes(poiType)) {
                button.style.border = '2px solid #4CAF50'; // –ó–µ–ª–µ–Ω–∞—è —Ä–∞–º–∫–∞ –¥–ª—è –ª—é–±–∏–º—ã—Ö —Ç–∏–ø–æ–≤
                button.title = '–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è —ç—Ç–æ—Ç —Ç–∏–ø –º–µ—Å—Ç';
            } else if (this.preferences.disliked.includes(poiType)) {
                button.style.opacity = '0.6'; // –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –¥–ª—è –Ω–µ–ª—é–±–∏–º—ã—Ö —Ç–∏–ø–æ–≤
                button.title = '–í—ã –∏–∑–±–µ–≥–∞–µ—Ç–µ —ç—Ç–æ—Ç —Ç–∏–ø –º–µ—Å—Ç';
            }
        });
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
     */
    showPreferencesModal() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if (!window.authModule || !window.authModule.isAuthenticated()) {
            alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π');
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        let modalContainer = document.getElementById('preferences-modal-container');
        
        if (!modalContainer) {
            modalContainer = document.createElement('div');
            modalContainer.id = 'preferences-modal-container';
            modalContainer.innerHTML = `
                <div class="preferences-modal">
                    <div class="preferences-header">
                        <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π</h3>
                        <span class="close-button">&times;</span>
                    </div>
                    <div class="preferences-content">
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø—ã –º–µ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è –∏–ª–∏ –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è:</p>
                        <div class="poi-preferences">
                            <div class="poi-type" data-type="restaurant">
                                <span class="poi-name">–†–µ—Å—Ç–æ—Ä–∞–Ω—ã</span>
                                <div class="preference-buttons">
                                    <button class="like-button" title="–ù—Ä–∞–≤–∏—Ç—Å—è">üëç</button>
                                    <button class="dislike-button" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è">üëé</button>
                                    <button class="neutral-button" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">‚ùå</button>
                                </div>
                            </div>
                            <div class="poi-type" data-type="cafe">
                                <span class="poi-name">–ö–∞—Ñ–µ</span>
                                <div class="preference-buttons">
                                    <button class="like-button" title="–ù—Ä–∞–≤–∏—Ç—Å—è">üëç</button>
                                    <button class="dislike-button" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è">üëé</button>
                                    <button class="neutral-button" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">‚ùå</button>
                                </div>
                            </div>
                            <div class="poi-type" data-type="bar">
                                <span class="poi-name">–ë–∞—Ä—ã</span>
                                <div class="preference-buttons">
                                    <button class="like-button" title="–ù—Ä–∞–≤–∏—Ç—Å—è">üëç</button>
                                    <button class="dislike-button" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è">üëé</button>
                                    <button class="neutral-button" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">‚ùå</button>
                                </div>
                            </div>
                            <div class="poi-type" data-type="pharmacy">
                                <span class="poi-name">–ê–ø—Ç–µ–∫–∏</span>
                                <div class="preference-buttons">
                                    <button class="like-button" title="–ù—Ä–∞–≤–∏—Ç—Å—è">üëç</button>
                                    <button class="dislike-button" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è">üëé</button>
                                    <button class="neutral-button" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">‚ùå</button>
                                </div>
                            </div>
                            <div class="poi-type" data-type="bank">
                                <span class="poi-name">–ë–∞–Ω–∫–∏</span>
                                <div class="preference-buttons">
                                    <button class="like-button" title="–ù—Ä–∞–≤–∏—Ç—Å—è">üëç</button>
                                    <button class="dislike-button" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è">üëé</button>
                                    <button class="neutral-button" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">‚ùå</button>
                                </div>
                            </div>
                            <div class="poi-type" data-type="school">
                                <span class="poi-name">–®–∫–æ–ª—ã</span>
                                <div class="preference-buttons">
                                    <button class="like-button" title="–ù—Ä–∞–≤–∏—Ç—Å—è">üëç</button>
                                    <button class="dislike-button" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è">üëé</button>
                                    <button class="neutral-button" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">‚ùå</button>
                                </div>
                            </div>
                            <div class="poi-type" data-type="gym">
                                <span class="poi-name">–°–ø–æ—Ä—Ç–∑–∞–ª—ã</span>
                                <div class="preference-buttons">
                                    <button class="like-button" title="–ù—Ä–∞–≤–∏—Ç—Å—è">üëç</button>
                                    <button class="dislike-button" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è">üëé</button>
                                    <button class="neutral-button" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">‚ùå</button>
                                </div>
                            </div>
                        </div>
                        <div class="preferences-actions">
                            <button class="save-button">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                            <button class="cancel-button">–û—Ç–º–µ–Ω–∞</button>
                        </div>
                    </div>
                </div>
            `;
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            const style = document.createElement('style');
            style.textContent = `
                #preferences-modal-container {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background-color: rgba(0, 0, 0, 0.5);
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    z-index: 1000;
                }
                
                .preferences-modal {
                    background-color: white;
                    border-radius: 5px;
                    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
                    width: 500px;
                    max-width: 90%;
                    max-height: 90%;
                    overflow-y: auto;
                }
                
                .preferences-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 15px;
                    border-bottom: 1px solid #eee;
                }
                
                .preferences-header h3 {
                    margin: 0;
                }
                
                .close-button {
                    cursor: pointer;
                    font-size: 22px;
                }
                
                .preferences-content {
                    padding: 15px;
                }
                
                .poi-preferences {
                    margin-top: 15px;
                }
                
                .poi-type {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 10px;
                    border-bottom: 1px solid #eee;
                }
                
                .poi-name {
                    font-weight: bold;
                }
                
                .preference-buttons {
                    display: flex;
                    gap: 5px;
                }
                
                .preference-buttons button {
                    background: none;
                    border: 1px solid #ddd;
                    border-radius: 3px;
                    padding: 5px 10px;
                    cursor: pointer;
                    font-size: 16px;
                }
                
                .preference-buttons button.active {
                    background-color: #f0f0f0;
                    border-color: #999;
                }
                
                .preferences-actions {
                    margin-top: 20px;
                    display: flex;
                    justify-content: flex-end;
                    gap: 10px;
                }
                
                .preferences-actions button {
                    padding: 8px 15px;
                    border-radius: 3px;
                    cursor: pointer;
                }
                
                .save-button {
                    background-color: #4CAF50;
                    color: white;
                    border: none;
                }
                
                .cancel-button {
                    background-color: #f0f0f0;
                    border: 1px solid #ddd;
                }
            `;
            
            document.head.appendChild(style);
            document.body.appendChild(modalContainer);
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            const closeButton = modalContainer.querySelector('.close-button');
            closeButton.addEventListener('click', () => {
                modalContainer.remove();
            });
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
            modalContainer.addEventListener('click', (e) => {
                if (e.target === modalContainer) {
                    modalContainer.remove();
                }
            });
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            this.updatePreferencesUI(modalContainer);
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
            const preferenceButtons = modalContainer.querySelectorAll('.preference-buttons button');
            preferenceButtons.forEach(button => {
                button.addEventListener('click', (e) => {
                    const poiType = e.target.closest('.poi-type').getAttribute('data-type');
                    const buttonType = e.target.classList.contains('like-button') ? 'like' :
                                      e.target.classList.contains('dislike-button') ? 'dislike' : 'neutral';
                    
                    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –≤ –≥—Ä—É–ø–ø–µ
                    const buttonsGroup = e.target.closest('.preference-buttons');
                    buttonsGroup.querySelectorAll('button').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    
                    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
                    if (buttonType !== 'neutral') {
                        e.target.classList.add('active');
                    }
                });
            });
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            const saveButton = modalContainer.querySelector('.save-button');
            saveButton.addEventListener('click', () => {
                this.savePreferences(modalContainer)
                    .then(() => {
                        modalContainer.remove();
                    });
            });
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
            const cancelButton = modalContainer.querySelector('.cancel-button');
            cancelButton.addEventListener('click', () => {
                modalContainer.remove();
            });
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
     */
    updatePreferencesUI(modalContainer) {
        const poiTypes = modalContainer.querySelectorAll('.poi-type');
        
        poiTypes.forEach(poiTypeElement => {
            const poiType = poiTypeElement.getAttribute('data-type');
            const likeButton = poiTypeElement.querySelector('.like-button');
            const dislikeButton = poiTypeElement.querySelector('.dislike-button');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            poiTypeElement.querySelectorAll('button').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
            if (this.preferences.liked.includes(poiType)) {
                likeButton.classList.add('active');
            } else if (this.preferences.disliked.includes(poiType)) {
                dislikeButton.classList.add('active');
            }
        });
    }
    
    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
     */
    async savePreferences(modalContainer) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if (!window.authModule || !window.authModule.isAuthenticated()) {
            alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π');
            return;
        }
        
        const userId = window.authModule.getCurrentUser().id;
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–∑ UI
            const newPreferences = {
                liked: [],
                disliked: []
            };
            
            const poiTypes = modalContainer.querySelectorAll('.poi-type');
            poiTypes.forEach(poiTypeElement => {
                const poiType = poiTypeElement.getAttribute('data-type');
                const likeButton = poiTypeElement.querySelector('.like-button');
                const dislikeButton = poiTypeElement.querySelector('.dislike-button');
                
                if (likeButton.classList.contains('active')) {
                    newPreferences.liked.push(poiType);
                } else if (dislikeButton.classList.contains('active')) {
                    newPreferences.disliked.push(poiType);
                }
            });
            
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            await fetch(`/api/users/${userId}/preferences`, {
                method: 'DELETE'
            });
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è "–Ω—Ä–∞–≤–∏—Ç—Å—è"
            for (const poiType of newPreferences.liked) {
                await fetch(`/api/users/${userId}/preferences`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        poiType: poiType,
                        preferenceType: 'LIKE'
                    })
                });
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è "–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è"
            for (const poiType of newPreferences.disliked) {
                await fetch(`/api/users/${userId}/preferences`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        poiType: poiType,
                        preferenceType: 'DISLIKE'
                    })
                });
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            this.preferences = newPreferences;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI();
            
            console.log('–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', this.preferences);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π');
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–∞–Ω–Ω—ã–π —Ç–∏–ø POI
     */
    isLiked(poiType) {
        return this.preferences.liked.includes(poiType);
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–∞–Ω–Ω—ã–π —Ç–∏–ø POI
     */
    isDisliked(poiType) {
        return this.preferences.disliked.includes(poiType);
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    getPreferences() {
        return this.preferences;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    window.userPreferencesModule = new UserPreferencesModule();
}); 